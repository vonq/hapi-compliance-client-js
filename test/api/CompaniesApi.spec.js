/**
 * HAPI Onboarding API
 * Simple API for handling employer onboarding
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HapiOnboardingApi);
  }
}(this, function(expect, HapiOnboardingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HapiOnboardingApi.CompaniesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompaniesApi', function() {
    describe('companiesContactsCreate', function() {
      it('should call companiesContactsCreate successfully', function(done) {
        //uncomment below and update the code to test companiesContactsCreate
        //instance.companiesContactsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesContactsDelete', function() {
      it('should call companiesContactsDelete successfully', function(done) {
        //uncomment below and update the code to test companiesContactsDelete
        //instance.companiesContactsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesContactsList', function() {
      it('should call companiesContactsList successfully', function(done) {
        //uncomment below and update the code to test companiesContactsList
        //instance.companiesContactsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesContactsPartialUpdate', function() {
      it('should call companiesContactsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesContactsPartialUpdate
        //instance.companiesContactsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesContactsRead', function() {
      it('should call companiesContactsRead successfully', function(done) {
        //uncomment below and update the code to test companiesContactsRead
        //instance.companiesContactsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesContactsUpdate', function() {
      it('should call companiesContactsUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesContactsUpdate
        //instance.companiesContactsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesCreate', function() {
      it('should call companiesCreate successfully', function(done) {
        //uncomment below and update the code to test companiesCreate
        //instance.companiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesDelete', function() {
      it('should call companiesDelete successfully', function(done) {
        //uncomment below and update the code to test companiesDelete
        //instance.companiesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesList', function() {
      it('should call companiesList successfully', function(done) {
        //uncomment below and update the code to test companiesList
        //instance.companiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesPartialUpdate', function() {
      it('should call companiesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesPartialUpdate
        //instance.companiesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesRead', function() {
      it('should call companiesRead successfully', function(done) {
        //uncomment below and update the code to test companiesRead
        //instance.companiesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsCreate', function() {
      it('should call companiesSubsidiariesBoardsCreate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsCreate
        //instance.companiesSubsidiariesBoardsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsDelete', function() {
      it('should call companiesSubsidiariesBoardsDelete successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsDelete
        //instance.companiesSubsidiariesBoardsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsList', function() {
      it('should call companiesSubsidiariesBoardsList successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsList
        //instance.companiesSubsidiariesBoardsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsPartialUpdate', function() {
      it('should call companiesSubsidiariesBoardsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsPartialUpdate
        //instance.companiesSubsidiariesBoardsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsRead', function() {
      it('should call companiesSubsidiariesBoardsRead successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsRead
        //instance.companiesSubsidiariesBoardsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesBoardsUpdate', function() {
      it('should call companiesSubsidiariesBoardsUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesBoardsUpdate
        //instance.companiesSubsidiariesBoardsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesCreate', function() {
      it('should call companiesSubsidiariesCreate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesCreate
        //instance.companiesSubsidiariesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesDelete', function() {
      it('should call companiesSubsidiariesDelete successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesDelete
        //instance.companiesSubsidiariesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesList', function() {
      it('should call companiesSubsidiariesList successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesList
        //instance.companiesSubsidiariesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesPartialUpdate', function() {
      it('should call companiesSubsidiariesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesPartialUpdate
        //instance.companiesSubsidiariesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesRead', function() {
      it('should call companiesSubsidiariesRead successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesRead
        //instance.companiesSubsidiariesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesSubsidiariesUpdate', function() {
      it('should call companiesSubsidiariesUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesSubsidiariesUpdate
        //instance.companiesSubsidiariesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('companiesUpdate', function() {
      it('should call companiesUpdate successfully', function(done) {
        //uncomment below and update the code to test companiesUpdate
        //instance.companiesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitForReview', function() {
      it('should call submitForReview successfully', function(done) {
        //uncomment below and update the code to test submitForReview
        //instance.submitForReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
