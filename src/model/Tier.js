/**
 * HAPI Onboarding API
 * Simple API for handling employer onboarding
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Tier model module.
 * @module model/Tier
 * @version v1
 */
class Tier {
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {Number} maximum_vacancies_per_year
     * @type {Number}
     */
    maximum_vacancies_per_year;
    /**
     * @member {Number} deactivation_limit
     * @type {Number}
     */
    deactivation_limit;
    /**
     * @member {String} vonq_price
     * @type {String}
     */
    vonq_price;
    /**
     * @member {String} rate_card_price
     * @type {String}
     */
    rate_card_price;

    

    /**
     * Constructs a new <code>Tier</code>.
     * @alias module:model/Tier
     * @param name {String} 
     * @param maximumVacanciesPerYear {Number} Tier's maximum jobs per year published
     * @param deactivationLimit {Number} Maximum number of jobs before the subscription is deactivated
     * @param vonqPrice {String} Price per entity per year in dollars(ex. VAT), as invoiced to the ATS by VONQ
     * @param rateCardPrice {String} Proposed rate card price per entity per year in dollars (ex. VAT), as invoiced to the employer by the ATS
     */
    constructor(name, maximumVacanciesPerYear, deactivationLimit, vonqPrice, rateCardPrice) { 
        
        Tier.initialize(this, name, maximumVacanciesPerYear, deactivationLimit, vonqPrice, rateCardPrice);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, maximumVacanciesPerYear, deactivationLimit, vonqPrice, rateCardPrice) { 
        obj['name'] = name;
        obj['maximum_vacancies_per_year'] = maximumVacanciesPerYear;
        obj['deactivation_limit'] = deactivationLimit;
        obj['vonq_price'] = vonqPrice;
        obj['rate_card_price'] = rateCardPrice;
    }

    /**
     * Constructs a <code>Tier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Tier} obj Optional instance to populate.
     * @return {module:model/Tier} The populated <code>Tier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Tier();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('maximum_vacancies_per_year')) {
                obj['maximum_vacancies_per_year'] = ApiClient.convertToType(data['maximum_vacancies_per_year'], 'Number');
            }
            if (data.hasOwnProperty('deactivation_limit')) {
                obj['deactivation_limit'] = ApiClient.convertToType(data['deactivation_limit'], 'Number');
            }
            if (data.hasOwnProperty('vonq_price')) {
                obj['vonq_price'] = ApiClient.convertToType(data['vonq_price'], 'String');
            }
            if (data.hasOwnProperty('rate_card_price')) {
                obj['rate_card_price'] = ApiClient.convertToType(data['rate_card_price'], 'String');
            }
        }
        return obj;
    }
}



export default Tier;

