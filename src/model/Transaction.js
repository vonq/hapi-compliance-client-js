/**
 * HAPI Onboarding API
 * Simple API for handling employer onboarding
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Transaction model module.
 * @module model/Transaction
 * @version v1
 */
class Transaction {
    /**
     * @member {String} apply_url
     * @type {String}
     */
    apply_url;
    /**
     * @member {String} ats_company_id
     * @type {String}
     */
    ats_company_id;
    /**
     * @member {String} ats_id
     * @type {String}
     */
    ats_id;
    /**
     * @member {String} channel
     * @type {String}
     */
    channel;
    /**
     * @member {String} company_name
     * @type {String}
     */
    company_name;
    /**
     * @member {String} confirmation_id
     * @type {String}
     */
    confirmation_id;
    /**
     * @member {Transaction.DistributionTypeEnum} distribution_type
     * @type {Transaction.DistributionTypeEnum}
     */
    distribution_type;
    /**
     * @member {String} error
     * @type {String}
     */
    error;
    /**
     * @member {String} job_location
     * @type {String}
     */
    job_location;
    /**
     * @member {String} job_title
     * @type {String}
     */
    job_title;
    /**
     * @member {String} outreach_centre_email_address
     * @type {String}
     */
    outreach_centre_email_address;
    /**
     * @member {Date} posting_timestamp
     * @type {Date}
     */
    posting_timestamp;
    /**
     * @member {String} publication_url
     * @type {String}
     */
    publication_url;
    /**
     * @member {String} req_number
     * @type {String}
     */
    req_number;
    /**
     * @member {Transaction.StateEnum} state
     * @type {Transaction.StateEnum}
     */
    state;
    /**
     * @member {String} transaction_id
     * @type {String}
     */
    transaction_id;
    /**
     * @member {Transaction.TransactionMethodEnum} transaction_method
     * @type {Transaction.TransactionMethodEnum}
     */
    transaction_method;
    /**
     * @member {Date} transaction_timestamp
     * @type {Date}
     */
    transaction_timestamp;
    /**
     * @member {Transaction.TransactionTypeEnum} transaction_type
     * @type {Transaction.TransactionTypeEnum}
     */
    transaction_type;

    

    /**
     * Constructs a new <code>Transaction</code>.
     * @alias module:model/Transaction
     * @param atsCompanyId {String} 
     * @param atsId {String} 
     * @param transactionId {String} 
     */
    constructor(atsCompanyId, atsId, transactionId) { 
        
        Transaction.initialize(this, atsCompanyId, atsId, transactionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, atsCompanyId, atsId, transactionId) { 
        obj['ats_company_id'] = atsCompanyId;
        obj['ats_id'] = atsId;
        obj['transaction_id'] = transactionId;
    }

    /**
     * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Transaction} obj Optional instance to populate.
     * @return {module:model/Transaction} The populated <code>Transaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Transaction();

            if (data.hasOwnProperty('apply_url')) {
                obj['apply_url'] = ApiClient.convertToType(data['apply_url'], 'String');
            }
            if (data.hasOwnProperty('ats_company_id')) {
                obj['ats_company_id'] = ApiClient.convertToType(data['ats_company_id'], 'String');
            }
            if (data.hasOwnProperty('ats_id')) {
                obj['ats_id'] = ApiClient.convertToType(data['ats_id'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('confirmation_id')) {
                obj['confirmation_id'] = ApiClient.convertToType(data['confirmation_id'], 'String');
            }
            if (data.hasOwnProperty('distribution_type')) {
                obj['distribution_type'] = ApiClient.convertToType(data['distribution_type'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('job_location')) {
                obj['job_location'] = ApiClient.convertToType(data['job_location'], 'String');
            }
            if (data.hasOwnProperty('job_title')) {
                obj['job_title'] = ApiClient.convertToType(data['job_title'], 'String');
            }
            if (data.hasOwnProperty('outreach_centre_email_address')) {
                obj['outreach_centre_email_address'] = ApiClient.convertToType(data['outreach_centre_email_address'], 'String');
            }
            if (data.hasOwnProperty('posting_timestamp')) {
                obj['posting_timestamp'] = ApiClient.convertToType(data['posting_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('publication_url')) {
                obj['publication_url'] = ApiClient.convertToType(data['publication_url'], 'String');
            }
            if (data.hasOwnProperty('req_number')) {
                obj['req_number'] = ApiClient.convertToType(data['req_number'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('transaction_method')) {
                obj['transaction_method'] = ApiClient.convertToType(data['transaction_method'], 'String');
            }
            if (data.hasOwnProperty('transaction_timestamp')) {
                obj['transaction_timestamp'] = ApiClient.convertToType(data['transaction_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('transaction_type')) {
                obj['transaction_type'] = ApiClient.convertToType(data['transaction_type'], 'String');
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>distribution_type</code> property.
 * @enum {String}
 * @readonly
 */
Transaction['DistributionTypeEnum'] = {

    /**
     * value: "ofccp"
     * @const
     */
    "ofccp": "ofccp",

    /**
     * value: "outreach"
     * @const
     */
    "outreach": "outreach",

    /**
     * value: "diversity_and_inclusion"
     * @const
     */
    "diversity_and_inclusion": "diversity_and_inclusion"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Transaction['StateEnum'] = {

    /**
     * value: "AL"
     * @const
     */
    "AL": "AL",

    /**
     * value: "AK"
     * @const
     */
    "AK": "AK",

    /**
     * value: "AS"
     * @const
     */
    "AS": "AS",

    /**
     * value: "AZ"
     * @const
     */
    "AZ": "AZ",

    /**
     * value: "AR"
     * @const
     */
    "AR": "AR",

    /**
     * value: "AA"
     * @const
     */
    "AA": "AA",

    /**
     * value: "AE"
     * @const
     */
    "AE": "AE",

    /**
     * value: "AP"
     * @const
     */
    "AP": "AP",

    /**
     * value: "CA"
     * @const
     */
    "CA": "CA",

    /**
     * value: "CO"
     * @const
     */
    "CO": "CO",

    /**
     * value: "CT"
     * @const
     */
    "CT": "CT",

    /**
     * value: "DE"
     * @const
     */
    "DE": "DE",

    /**
     * value: "DC"
     * @const
     */
    "DC": "DC",

    /**
     * value: "FL"
     * @const
     */
    "FL": "FL",

    /**
     * value: "GA"
     * @const
     */
    "GA": "GA",

    /**
     * value: "GU"
     * @const
     */
    "GU": "GU",

    /**
     * value: "HI"
     * @const
     */
    "HI": "HI",

    /**
     * value: "ID"
     * @const
     */
    "ID": "ID",

    /**
     * value: "IL"
     * @const
     */
    "IL": "IL",

    /**
     * value: "IN"
     * @const
     */
    "IN": "IN",

    /**
     * value: "IA"
     * @const
     */
    "IA": "IA",

    /**
     * value: "KS"
     * @const
     */
    "KS": "KS",

    /**
     * value: "KY"
     * @const
     */
    "KY": "KY",

    /**
     * value: "LA"
     * @const
     */
    "LA": "LA",

    /**
     * value: "ME"
     * @const
     */
    "ME": "ME",

    /**
     * value: "MD"
     * @const
     */
    "MD": "MD",

    /**
     * value: "MA"
     * @const
     */
    "MA": "MA",

    /**
     * value: "MI"
     * @const
     */
    "MI": "MI",

    /**
     * value: "MN"
     * @const
     */
    "MN": "MN",

    /**
     * value: "MS"
     * @const
     */
    "MS": "MS",

    /**
     * value: "MO"
     * @const
     */
    "MO": "MO",

    /**
     * value: "MT"
     * @const
     */
    "MT": "MT",

    /**
     * value: "NE"
     * @const
     */
    "NE": "NE",

    /**
     * value: "NV"
     * @const
     */
    "NV": "NV",

    /**
     * value: "NH"
     * @const
     */
    "NH": "NH",

    /**
     * value: "NJ"
     * @const
     */
    "NJ": "NJ",

    /**
     * value: "NM"
     * @const
     */
    "NM": "NM",

    /**
     * value: "NY"
     * @const
     */
    "NY": "NY",

    /**
     * value: "NC"
     * @const
     */
    "NC": "NC",

    /**
     * value: "ND"
     * @const
     */
    "ND": "ND",

    /**
     * value: "MP"
     * @const
     */
    "MP": "MP",

    /**
     * value: "OH"
     * @const
     */
    "OH": "OH",

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK",

    /**
     * value: "OR"
     * @const
     */
    "OR": "OR",

    /**
     * value: "PA"
     * @const
     */
    "PA": "PA",

    /**
     * value: "PR"
     * @const
     */
    "PR": "PR",

    /**
     * value: "RI"
     * @const
     */
    "RI": "RI",

    /**
     * value: "SC"
     * @const
     */
    "SC": "SC",

    /**
     * value: "SD"
     * @const
     */
    "SD": "SD",

    /**
     * value: "TN"
     * @const
     */
    "TN": "TN",

    /**
     * value: "TX"
     * @const
     */
    "TX": "TX",

    /**
     * value: "UT"
     * @const
     */
    "UT": "UT",

    /**
     * value: "VT"
     * @const
     */
    "VT": "VT",

    /**
     * value: "VI"
     * @const
     */
    "VI": "VI",

    /**
     * value: "VA"
     * @const
     */
    "VA": "VA",

    /**
     * value: "WA"
     * @const
     */
    "WA": "WA",

    /**
     * value: "WV"
     * @const
     */
    "WV": "WV",

    /**
     * value: "WI"
     * @const
     */
    "WI": "WI",

    /**
     * value: "WY"
     * @const
     */
    "WY": "WY"
};


/**
 * Allowed values for the <code>transaction_method</code> property.
 * @enum {String}
 * @readonly
 */
Transaction['TransactionMethodEnum'] = {

    /**
     * value: "ftp"
     * @const
     */
    "ftp": "ftp",

    /**
     * value: "api"
     * @const
     */
    "api": "api",

    /**
     * value: "xml"
     * @const
     */
    "xml": "xml",

    /**
     * value: "email"
     * @const
     */
    "email": "email"
};


/**
 * Allowed values for the <code>transaction_type</code> property.
 * @enum {String}
 * @readonly
 */
Transaction['TransactionTypeEnum'] = {

    /**
     * value: "receive"
     * @const
     */
    "receive": "receive",

    /**
     * value: "create"
     * @const
     */
    "create": "create",

    /**
     * value: "wait"
     * @const
     */
    "wait": "wait",

    /**
     * value: "update"
     * @const
     */
    "update": "update",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};



export default Transaction;

