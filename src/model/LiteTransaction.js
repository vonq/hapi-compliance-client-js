/**
 * HAPI Onboarding API
 * Simple API for handling employer onboarding
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LiteTransaction model module.
 * @module model/LiteTransaction
 * @version v1
 */
class LiteTransaction {
    /**
     * @member {String} transaction_id
     * @type {String}
     */
    transaction_id;
    /**
     * @member {LiteTransaction.TransactionTypeEnum} transaction_type
     * @type {LiteTransaction.TransactionTypeEnum}
     */
    transaction_type;
    /**
     * @member {Date} transaction_timestamp
     * @type {Date}
     */
    transaction_timestamp;
    /**
     * @member {LiteTransaction.DistributionTypeEnum} distribution_type
     * @type {LiteTransaction.DistributionTypeEnum}
     */
    distribution_type;
    /**
     * @member {String} channel
     * @type {String}
     */
    channel;
    /**
     * @member {String} confirmation_id
     * @type {String}
     */
    confirmation_id;

    

    /**
     * Constructs a new <code>LiteTransaction</code>.
     * @alias module:model/LiteTransaction
     * @param transactionId {String} 
     */
    constructor(transactionId) { 
        
        LiteTransaction.initialize(this, transactionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transactionId) { 
        obj['transaction_id'] = transactionId;
    }

    /**
     * Constructs a <code>LiteTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiteTransaction} obj Optional instance to populate.
     * @return {module:model/LiteTransaction} The populated <code>LiteTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiteTransaction();

            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('transaction_type')) {
                obj['transaction_type'] = ApiClient.convertToType(data['transaction_type'], 'String');
            }
            if (data.hasOwnProperty('transaction_timestamp')) {
                obj['transaction_timestamp'] = ApiClient.convertToType(data['transaction_timestamp'], 'Date');
            }
            if (data.hasOwnProperty('distribution_type')) {
                obj['distribution_type'] = ApiClient.convertToType(data['distribution_type'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('confirmation_id')) {
                obj['confirmation_id'] = ApiClient.convertToType(data['confirmation_id'], 'String');
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>transaction_type</code> property.
 * @enum {String}
 * @readonly
 */
LiteTransaction['TransactionTypeEnum'] = {

    /**
     * value: "receive"
     * @const
     */
    "receive": "receive",

    /**
     * value: "create"
     * @const
     */
    "create": "create",

    /**
     * value: "wait"
     * @const
     */
    "wait": "wait",

    /**
     * value: "update"
     * @const
     */
    "update": "update",

    /**
     * value: "delete"
     * @const
     */
    "delete": "delete"
};


/**
 * Allowed values for the <code>distribution_type</code> property.
 * @enum {String}
 * @readonly
 */
LiteTransaction['DistributionTypeEnum'] = {

    /**
     * value: "ofccp"
     * @const
     */
    "ofccp": "ofccp",

    /**
     * value: "outreach"
     * @const
     */
    "outreach": "outreach",

    /**
     * value: "diversity_and_inclusion"
     * @const
     */
    "diversity_and_inclusion": "diversity_and_inclusion"
};



export default LiteTransaction;

